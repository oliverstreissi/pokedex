{"version":3,"sources":["theme/theme.ts","components/common/header/styles.ts","components/common/header/Header.tsx","api/api.ts","container/pokemonsGrid/styles.ts","components/pokemonCard/styles.ts","components/pokemonCard/PokemonCard.tsx","components/common/loadingSpinner/styles.ts","components/common/loadingSpinner/LoadingSpinner.tsx","container/pokemonsGrid/pokemonsGrid.tsx","container/pokemonDetails/styles.ts","components/pokemonDetails/styles.ts","components/pokemonDetails/TitleContainer.tsx","components/pokemonDetails/ImageStatsContainer.tsx","components/pokemonDetails/TypeAbilitiesContainer.tsx","components/pokemonDetails/EvolutionMovesContainer.tsx","container/pokemonDetails/PokemonDetails.tsx","App.tsx","index.tsx"],"names":["theme","createMuiTheme","palette","type","primary","main","secondary","typography","fontFamily","makeStyles","root","flexGrow","appBar","backgroundColor","height","link","margin","logo","filter","transform","breakpoints","down","Header","classes","useStyles","className","AppBar","position","to","data-testid","src","process","alt","fetchAllPokemon","offset","limit","a","url","axios","response","pokemonUrlList","data","results","Promise","all","map","pokemon","fetchPokemon","pokemonData","console","error","get","then","id","name","picture","sprites","other","front_default","abilities","types","order","stats","moves","species","catch","fetchEvolutionChain","evolutionChain","speciesData","evolutionChainUrl","evolution_chain","evolutionChainData","chain","evolutionDetails","evolution_details","push","minLevel","min_level","evolves_to","hasOwnProperty","toolbar","mixins","marginTop","marginRight","marginLeft","spinnerWrapper","display","justifyContent","alignItems","transition","boxShadow","textTransform","textAlign","fontSize","width","PokemonCard","pokeData","history","useHistory","Card","CardActionArea","onClick","CardContent","Typography","variant","pokeball","maxHeight","animation","LoadingSpinner","PokemonsGrid","useState","isLoading","setIsLoading","pokemons","setPokemons","setOffset","useEffect","prevPokemons","fetchData","Fragment","Grid","container","spacing","index","item","xs","sm","md","lg","Button","size","color","card","padding","title","textShadow","subtitle","text","evolutionPicture","tableCell","borderBottom","table","maxWidth","containerMarginTop","movesListContainer","overflowY","movesList","columnCount","columnWidth","TitleContainer","justify","gutterBottom","Table","TableBody","stat","TableRow","TableCell","align","base_stat","join","ability","hover","style","cursor","move","PokemonDetails","pokemonId","useParams","setPokemon","setEvolutionChain","CardActions","startIcon","App","ThemeProvider","basename","CssBaseline","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5057e10.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#f14443\",\n    },\n    secondary: {\n      main: \"#f0f0f0\",\n    },\n  },\n  typography: {\n    fontFamily: \"Roboto, Bangers\",\n  },\n});\n","import { makeStyles, Theme } from \"@material-ui/core\";\n\nexport default makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: theme.palette.primary.main,\n    height: 80,\n  },\n  link: {\n    margin: \"5px auto 0 auto\",\n  },\n  logo: {\n    height: 70,\n    filter: \"drop-shadow(0px 0px 3px black)\",\n    \"&:hover\": {\n      transform: \"scale(1.02)\",\n    },\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    appBar: {\n      height: 60,\n    },\n    logo: {\n      height: 50,\n    },\n  },\n}));\n","import React from \"react\";\nimport { AppBar } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport useStyles from \"./styles\";\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Link to=\"/\" className={classes.link}>\n          <img\n            data-testid=\"header-logo\"\n            src={process.env.PUBLIC_URL + \"/assets/pokedex_logo.png\"}\n            alt=\"pokedex\"\n            className={classes.logo}\n          />\n        </Link>\n      </AppBar>\n    </div>\n  );\n}\n","import { IEvolutionItem, IPokemon, IPokemonUrl } from \"../types/types\";\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\n\nexport const fetchAllPokemon = async (\n  offset: number,\n  limit: number\n): Promise<any> => {\n  const url: string = `https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`;\n\n  try {\n    const response: AxiosResponse = await axios(url);\n    const pokemonUrlList: IPokemonUrl[] = response.data.results;\n\n    return Promise.all(\n      pokemonUrlList.map(async (pokemon) => {\n        const pokemonData: IPokemon = await fetchPokemon(pokemon.url);\n        return pokemonData;\n      })\n    );\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchPokemon = async (url: string): Promise<any> => {\n  return axios\n    .get(url)\n    .then((response: AxiosResponse) => response.data)\n    .then<IPokemon>((data: any) => ({\n      id: data.id,\n      name: data.name,\n      picture: data.sprites.other[\"official-artwork\"].front_default,\n      abilities: data.abilities,\n      types: data.types,\n      order: data.order,\n      stats: data.stats,\n      moves: data.moves,\n      species: data.species.url, //required to get possible evolutions\n    }))\n    .catch((error: AxiosError) => console.error(error));\n};\n\nexport const fetchEvolutionChain = async (url: string): Promise<any> => {\n  const evolutionChain: IEvolutionItem[] = [];\n\n  try {\n    const species: AxiosResponse = await axios(url);\n    const speciesData = species.data;\n\n    const evolutionChainUrl = speciesData.evolution_chain;\n    const response: AxiosResponse = await axios(evolutionChainUrl);\n    var evolutionChainData = response.data.chain;\n\n    do {\n      var evolutionDetails = evolutionChainData.evolution_details[0];\n\n      //fetch picture\n      const pokemon: AxiosResponse = await axios(\n        evolutionChainData.species.url\n      );\n      const data = pokemon.data;\n\n      const pokemonData = await fetchPokemon(\n        `https://pokeapi.co/api/v2/pokemon/${data.id}/`\n      );\n\n      evolutionChain.push({\n        pokemon: pokemonData,\n        minLevel: !evolutionDetails ? null : evolutionDetails.min_level,\n      });\n\n      evolutionChainData = evolutionChainData.evolves_to[0];\n    } while (\n      !!evolutionChainData &&\n      evolutionChainData.hasOwnProperty(\"evolves_to\")\n    );\n\n    return evolutionChain;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme: Theme) => ({\n  toolbar: theme.mixins.toolbar,\n  root: {\n    marginTop: 50,\n    flexGrow: 1,\n    marginRight: \"10%\",\n    marginLeft: \"10%\",\n  },\n  spinnerWrapper: {\n    margin: \"50px 0\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    root: {\n      marginTop: 30,\n      marginRight: \"5%\",\n      marginLeft: \"5%\",\n    },\n  },\n}));\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    transition: \"transform 0.15s ease-in-out\",\n    \"&:hover\": {\n      boxShadow: \"0px 0px 10px 5px rgb(0, 0, 0, 0.3)\",\n      transform: \"scale(1.05)\",\n    },\n  },\n  name: {\n    textTransform: \"capitalize\",\n    textAlign: \"center\",\n    fontFamily: \"'Bangers', cursive\",\n    fontSize: 28,\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 22,\n    },\n  },\n  picture: {\n    height: \"100%\",\n    width: \"100%\",\n  },\n}));\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardContent,\n  CardActionArea,\n  Typography,\n} from \"@material-ui/core\";\nimport { IPokemon } from \"../../types/types\";\nimport useStyles from \"./styles\";\n\nexport default function PokemonCard({ pokeData }: { pokeData: IPokemon }) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Card className={classes.root}>\n      {pokeData && (\n        <CardActionArea onClick={() => history.push(\"/pokemon/\" + pokeData.id)}>\n          <CardContent>\n            <img\n              src={pokeData.picture}\n              alt={pokeData.name}\n              className={classes.picture}\n            />\n            <Typography variant=\"h6\" className={classes.name}>\n              {pokeData.name}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      )}\n    </Card>\n  );\n}\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme: Theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  pokeball: {\n    maxHeight: 80,\n    animation: \"$spin 2s linear infinite\",\n    filter: \"drop-shadow(0px 0px 7px black)\",\n  },\n  \"@keyframes spin\": {\n    \"0%\": {\n      transform: \"rotate(0deg)\",\n    },\n    \"100%\": {\n      transform: \"rotate(360deg)\",\n    },\n  },\n}));\n","import useStyles from \"./styles\";\n\nexport default function LoadingSpinner() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <img\n        src={process.env.PUBLIC_URL + \"/assets/pokeball.png\"}\n        alt=\"pokeball\"\n        className={classes.pokeball}\n      />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { fetchAllPokemon } from \"../../api/api\";\nimport { IPokemon } from \"../../types/types\";\nimport { Grid, Button } from \"@material-ui/core\";\n\nimport useStyles from \"./styles\";\nimport PokemonCard from \"../../components/pokemonCard/PokemonCard\";\nimport LoadingSpinner from \"../../components/common/loadingSpinner/LoadingSpinner\";\n\nexport default function PokemonsGrid() {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [pokemons, setPokemons] = useState<IPokemon[]>([]);\n  const [offset, setOffset] = useState(0);\n  const limit = 48;\n\n  //fetch data\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      fetchAllPokemon(offset, limit).then((data: IPokemon[]) => {\n        setPokemons((prevPokemons) => [...prevPokemons, ...data]);\n        setIsLoading(false);\n      });\n    };\n    fetchData();\n  }, [offset]);\n\n  const loadMore = (): void => {\n    setIsLoading(true);\n    setOffset(offset + limit);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.toolbar} />\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          {pokemons &&\n            pokemons.map((pokemon: IPokemon, index: number) => (\n              <Grid item key={index} xs={6} sm={4} md={3} lg={2}>\n                <PokemonCard pokeData={pokemon} />\n              </Grid>\n            ))}\n        </Grid>\n        <div className={classes.spinnerWrapper}>\n          {isLoading ? (\n            <LoadingSpinner />\n          ) : (\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={loadMore}\n            >\n              Load more\n            </Button>\n          )}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme: Theme) => ({\n  toolbar: theme.mixins.toolbar,\n  card: {\n    margin: \"50px 20%\",\n    padding: \"20px 30px\",\n    [theme.breakpoints.down(\"md\")]: {\n      margin: \"30px 5%\",\n    },\n  },\n}));\n","import { makeStyles, Theme } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme: Theme) => ({\n  card: {\n    margin: \"130px 20%\",\n    padding: \"20px 30px\",\n    [theme.breakpoints.down(\"md\")]: {\n      margin: \"120px 5%\",\n    },\n  },\n  title: {\n    textTransform: \"capitalize\",\n    textAlign: \"center\",\n    fontFamily: \"'Bangers', cursive\",\n    textShadow: \"0px 0px 5px black\",\n  },\n  subtitle: {\n    textAlign: \"center\",\n    fontFamily: \"'Bangers', cursive\",\n    fontSize: 30,\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 16,\n    textTransform: \"capitalize\",\n  },\n  picture: {\n    display: \"block\",\n    height: 250,\n    margin: \"0 auto\",\n  },\n  evolutionPicture: {\n    height: 100,\n  },\n  tableCell: {\n    textTransform: \"capitalize\",\n    borderBottom: \"none\",\n    fontSize: 16,\n  },\n  table: {\n    maxWidth: 250,\n    margin: \"0 auto\",\n  },\n  containerMarginTop: {\n    marginTop: 30,\n  },\n  movesListContainer: {\n    overflowY: \"scroll\",\n    height: 300,\n    maxWidth: 400,\n    margin: \"0 auto\",\n  },\n  movesList: {\n    columnCount: 2,\n    columnWidth: \"50%\",\n    \"& > *\": {\n      textTransform: \"capitalize\",\n    },\n  },\n}));\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { IPokemon } from \"../../types/types\";\nimport useStyles from \"./styles\";\n\nexport default function TitleContainer({ pokemon }: { pokemon: IPokemon }) {\n  const classes = useStyles();\n\n  return (\n    <Grid item container justify=\"center\" alignItems=\"center\">\n      <Grid item>\n        <Typography\n          variant=\"h5\"\n          color=\"textSecondary\"\n          className={classes.title}\n        >\n          # {pokemon.order}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm>\n        <Typography variant=\"h2\" className={classes.title}>\n          {pokemon.name}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n} from \"@material-ui/core\";\nimport { IPokemon } from \"../../types/types\";\nimport useStyles from \"./styles\";\n\nexport default function TitleContainer({ pokemon }: { pokemon: IPokemon }) {\n  const classes = useStyles();\n\n  return (\n    <Grid item container justify=\"center\" alignItems=\"center\">\n      <Grid item container xs={12} sm={6}>\n        <img\n          src={pokemon.picture}\n          alt={pokemon.name}\n          className={classes.picture}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography className={classes.subtitle} gutterBottom>\n          Basic Stats\n        </Typography>\n        <Table className={classes.table} size=\"small\">\n          <TableBody>\n            {pokemon.stats.map((stat, index) => (\n              <TableRow key={index}>\n                <TableCell className={classes.tableCell}>\n                  {stat.stat.name}:\n                </TableCell>\n                <TableCell className={classes.tableCell} align=\"right\">\n                  {stat.base_stat}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { IPokemon } from \"../../types/types\";\nimport useStyles from \"./styles\";\n\nexport default function TitleContainer({ pokemon }: { pokemon: IPokemon }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      item\n      container\n      className={classes.containerMarginTop}\n      justify=\"center\"\n    >\n      <Grid item xs={12} sm={6}>\n        <Typography className={classes.subtitle}>Type</Typography>\n        <Typography className={classes.text}>\n          {pokemon.types.map((type) => type.type.name).join(\", \")}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography className={classes.subtitle}>Abilities</Typography>\n        <Typography className={classes.text}>\n          {pokemon.abilities.map((ability) => ability.ability.name).join(\", \")}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport {\n  Grid,\n  Typography,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport { IEvolutionItem, IPokemon } from \"../../types/types\";\nimport useStyles from \"./styles\";\n\nexport default function TitleContainer({\n  pokemon,\n  evolutionChain,\n}: {\n  pokemon: IPokemon;\n  evolutionChain: IEvolutionItem[];\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <Grid\n      item\n      container\n      alignItems=\"flex-start\"\n      justify=\"center\"\n      className={classes.containerMarginTop}\n    >\n      <Grid item xs={12} sm={6}>\n        <Typography className={classes.subtitle} gutterBottom>\n          Evolution Chain\n        </Typography>\n        <Table size=\"small\" className={classes.table}>\n          <TableBody>\n            {evolutionChain.map((data: IEvolutionItem, index) => (\n              <TableRow\n                key={index}\n                hover\n                onClick={() => history.push(`/pokemon/${data.pokemon.id}`)}\n                style={{ cursor: \"pointer\" }}\n              >\n                <TableCell className={classes.tableCell} align=\"center\">\n                  <img\n                    src={data.pokemon.picture}\n                    alt={data.pokemon.name}\n                    className={classes.evolutionPicture}\n                  />\n                </TableCell>\n                <TableCell className={classes.tableCell}>\n                  {data.minLevel\n                    ? data.pokemon.name + ` (Level: ${data.minLevel})`\n                    : data.pokemon.name}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography className={classes.subtitle} gutterBottom>\n          Moves\n        </Typography>\n        <div className={classes.movesListContainer}>\n          <ul className={classes.movesList}>\n            {pokemon.moves.map((move, index) => (\n              <li key={index}>{move.move.name}</li>\n            ))}\n          </ul>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nimport useStyles from \"./styles\";\nimport { fetchPokemon, fetchEvolutionChain } from \"../../api/api\";\nimport { IEvolutionItem, IPokemon, ParamTypes } from \"../../types/types\";\nimport LoadingSpinner from \"../../components/common/loadingSpinner/LoadingSpinner\";\nimport TitleContainer from \"../../components/pokemonDetails/TitleContainer\";\nimport ImageStatsContainer from \"../../components/pokemonDetails/ImageStatsContainer\";\nimport TypeAbilitiesContainer from \"../../components/pokemonDetails/TypeAbilitiesContainer\";\nimport EvolutionMovesContainer from \"../../components/pokemonDetails/EvolutionMovesContainer\";\n\nexport default function PokemonDetails() {\n  const classes = useStyles();\n  const { pokemonId } = useParams<ParamTypes>();\n  const [pokemon, setPokemon] = useState<IPokemon>();\n  const [evolutionChain, setEvolutionChain] = useState<IEvolutionItem[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n\n  //fetch data\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://pokeapi.co/api/v2/pokemon/${pokemonId}`;\n      fetchPokemon(url).then((data) => {\n        setPokemon(data);\n\n        fetchEvolutionChain(data.species).then((data) => {\n          setEvolutionChain(data);\n          setIsLoading(false);\n        });\n      });\n    };\n\n    fetchData();\n  }, [pokemonId]);\n\n  return (\n    <React.Fragment>\n      <div className={classes.toolbar} />\n      <Card className={classes.card}>\n        <CardActions>\n          <Button\n            onClick={() => history.push(\"/\")}\n            startIcon={<ArrowBackIcon />}\n            variant=\"outlined\"\n            size=\"medium\"\n            color=\"secondary\"\n          >\n            Back\n          </Button>\n        </CardActions>\n        <CardContent>\n          {isLoading ? (\n            <LoadingSpinner />\n          ) : (\n            pokemon &&\n            evolutionChain && (\n              <Grid container spacing={5}>\n                <TitleContainer pokemon={pokemon} />\n                <ImageStatsContainer pokemon={pokemon} />\n                <TypeAbilitiesContainer pokemon={pokemon} />\n                <EvolutionMovesContainer\n                  pokemon={pokemon}\n                  evolutionChain={evolutionChain}\n                />\n              </Grid>\n            )\n          )}\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./theme/theme\";\n\nimport Header from \"./components/common/header/Header\";\nimport PokemonsGrid from \"./container/pokemonsGrid/pokemonsGrid\";\nimport PokemonDetails from \"./container/pokemonDetails/PokemonDetails\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <CssBaseline />\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={PokemonsGrid} />\n          <Route path=\"/pokemon/:pokemonId\" component={PokemonDetails} />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}